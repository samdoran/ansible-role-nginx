#!/usr/bin/python

import seobject
import selinux

def main():
    module = AnsibleModule(
        argument_spec = dict(
            context_t = dict(required=True),
            port      = dict(required=True),
            proto     = dict(required=True),
            state     = dict(default='present')
        ),
        supports_check_mode=True
    )

    context_t   = module.params.get('context_t')
    port        = module.params.get('port')
    proto       = module.params.get('proto')
    state       = module.params.get('state')

    store = ""
    serange = "s0"
    OBJECT = seobject.portRecords(store)

    if state == 'present':
      try:
        OBJECT.add(port, proto, serange, context_t)
      except ValueError, e:
        module.exit_json(changed=False)
      except:
        module.exit_json(failed=True, changed=False, msg="Unexpected SELinux API error adding port")
    elif state == 'absent':
      try:
        OBJECT.delete(port, proto)
      except ValueError, e:
        module.exit_json(changed=False)
      except:
        module.exit_json(failed=True, changed=False, msg="Unexpected SELinux API error deleting port")
    module.exit_json(changed=True)


# import module snippets
from ansible.module_utils.basic import *
main()